{"version":3,"sources":["index.js","demo.js"],"names":["StarRating","el","options","ratingEl","document","querySelector","fingerPrint","preloader","activeClass","votes","starDataAttr","ratingDataAttr","onsubmit","star","submit","votedClassName","voted","console","log","classList","contains","Object","assign","init","setRating","blockVotes","handleHover","addClickHandler","add","initialRating","dataset","toLowerCase","stars","querySelectorAll","addEventListener","ev","forEach","remove","preventDefault","stopPropagation","target","rating1"],"mappings":";;;AA8EG,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA9EH,QAAA,gBAEqBA,IAAAA,EA4ElB,WA3EWC,SAAAA,EAAAA,EAAIC,GAAS,IAAA,EAAA,KAAA,EAAA,KAAA,GAClBC,KAAAA,SAAWC,SAASC,cAAcJ,GAElCC,KAAAA,QAAU,CACbI,aAAa,EACbC,UAAW,UACXC,YAAa,SACbC,MAAO,QACPC,aAAc,OACdC,eAAgB,cAChBC,SAAU,SAAAC,GACR,EAAKC,OAAOD,IAEdE,eAAgB,uBAChBC,MAAOC,QAAQC,IAAI,KAAKf,SAASgB,UAAUC,SAAS,KAAKL,kBAGvDd,GAAMC,IACHA,KAAAA,QAAUmB,OAAOC,OAAO,KAAKpB,QAASA,IAGxCqB,KAAAA,OAsDN,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAlDMV,MAAAA,SAAAA,GACLI,QAAQC,IAAIL,KAiDb,CAAA,IAAA,OA9CM,MAAA,WACAW,KAAAA,YAEA,KAAKtB,QAAQc,MAIXS,KAAAA,cAHAC,KAAAA,cACAC,KAAAA,qBAyCR,CAAA,IAAA,aAnCY,MAAA,WACNxB,KAAAA,SAASgB,UAAUS,IAAI,KAAK1B,QAAQa,gBACpCb,KAAAA,QAAQc,OAAQ,IAiCtB,CAAA,IAAA,YA9BW,MAAA,WACNa,IAAAA,EAAgB,KAAK1B,SAAS2B,QAAQ,KAAK5B,QAAQS,eAAeoB,eACvD,KAAK5B,SAASE,cAAc,UAAY,KAAKH,QAAQQ,aAAe,KAAOmB,EAAgB,MACjGV,UAAUS,IAAI,KAAK1B,QAAQM,eA2BrC,CAAA,IAAA,cAxBa,MAAA,WAAA,IAAA,EAAA,KACRwB,EAAQ,KAAK7B,SAAS8B,iBAAiB,SAAW,KAAK/B,QAAQQ,aAAe,KAC7EP,KAAAA,SAAS+B,iBAAiB,aAAc,SAAAC,GAC3CH,EAAMI,QAAQ,SAAAnC,GACZA,EAAGkB,UAAUkB,OAAO,EAAKnC,QAAQM,iBAGhCL,KAAAA,SAAS+B,iBAAiB,aAAc,SAAAC,GAC3C,EAAKX,gBAgBR,CAAA,IAAA,kBAZiB,MAAA,WAAA,IAAA,EAAA,KACXrB,KAAAA,SAAS+B,iBAAiB,QAAS,SAAAC,GACtCA,EAAGG,iBACHH,EAAGI,kBAECJ,EAAGK,OAAOV,QAAQ,EAAK5B,QAAQQ,gBAAkB,EAAKR,QAAQc,QAChEmB,EAAGK,OAAOrB,UAAUS,IAAI,EAAK1B,QAAQM,aACrC,EAAKN,QAAQU,SAASuB,EAAGK,OAAOV,QAAQ,EAAK5B,QAAQQ,eAErD,EAAKe,oBAGV,EAAA,GAAA,QAAA,QAAA;;AC1EH,aAJA,QAAA,eAEA,IAAA,EAAA,EAAA,QAAA,YAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAIgB,EAAU,IAAIzC,EAAJ,QAAe","file":"demo.d3b53871.js","sourceRoot":"../src","sourcesContent":["import \"./index.scss\";\n\nexport default class StarRating {\n  constructor(el, options) {\n    this.ratingEl = document.querySelector(el);\n\n    this.options = {\n      fingerPrint: false,\n      preloader: \".loader\",\n      activeClass: \"active\",\n      votes: \"votes\",\n      starDataAttr: \"star\",\n      ratingDataAttr: \"ratingValue\",\n      onsubmit: star => {\n        this.submit(star);\n      },\n      votedClassName: 'star-rating--blocked',\n      voted: console.log(this.ratingEl.classList.contains(this.votedClassName))\n    };\n\n    if (el && options) {\n      this.options = Object.assign(this.options, options)\n    }\n\n    this.init();\n\n  }\n\n  submit(star) {\n    console.log(star)\n  }\n\n  init() {\n    this.setRating();\n\n    if (!this.options.voted) {\n      this.handleHover();\n      this.addClickHandler();\n    } else {\n      this.blockVotes();\n    }\n  }\n\n  blockVotes() {\n    this.ratingEl.classList.add(this.options.votedClassName);\n    this.options.voted = true;\n  }\n\n  setRating() {\n    let initialRating = this.ratingEl.dataset[this.options.ratingDataAttr.toLowerCase()];\n    let activeEl = this.ratingEl.querySelector('*[data-' + this.options.starDataAttr + '=\"' + initialRating + '\"]')\n    activeEl.classList.add(this.options.activeClass);\n  }\n\n  handleHover() {\n    let stars = this.ratingEl.querySelectorAll(\"[data-\" + this.options.starDataAttr + \"]\");\n    this.ratingEl.addEventListener(\"mouseenter\", ev => {\n      stars.forEach(el => {\n        el.classList.remove(this.options.activeClass)\n      })\n    });\n    this.ratingEl.addEventListener(\"mouseleave\", ev => {\n      this.setRating()\n    })\n  }\n\n  addClickHandler() {\n    this.ratingEl.addEventListener('click', ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n\n      if (ev.target.dataset[this.options.starDataAttr] && !this.options.voted) {\n        ev.target.classList.add(this.options.activeClass);\n        this.options.onsubmit(ev.target.dataset[this.options.starDataAttr]);\n\n        this.blockVotes();\n      }\n    });\n  }\n}\n\n","import \"./demo.scss\";\n\nimport StarRating from \"./index\";\n\nlet rating1 = new StarRating(\".star-rating\");\n"]}